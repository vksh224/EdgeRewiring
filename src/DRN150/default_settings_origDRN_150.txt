## Default settings for the simulation### Scenario settingsScenario.name = default_scenarioScenario.simulateConnections = trueScenario.updateInterval = 0.1# 43200s == 12h#Scenario.endTime = [3600; 7200; 10800; 14400; 18000; 21600; 25200; 28800; 32400; 36000; 39600; 43200]Scenario.endTime =[600; 3600; 1200; 1800; 2400; 3000; 4200; 4800;  5400; 6000; 6600; 7200]## Interface-specific settings:# type : which interface class the interface belongs to# For different types, the sub-parameters are interface-specific# For SimpleBroadcastInterface, the parameters are:# transmitSpeed : transmit speed of the interface (bytes per second) # transmitRange : range of the interface (meters)# "Bluetooth" interface for all nodesbtInterface.type = InterferenceLimitedInterface# Transmit speed of 2 Mbps = 250kBpsbtInterface.transmitSpeed = 250kbtInterface.transmitRange = 50# Define 6 different node groupsScenario.nrofHostGroups = 1## Group-specific settings:# groupID : Group's identifier. Used as the prefix of host names# nrofHosts: number of hosts in the group# movementModel: movement model of the hosts (valid class name from movement package)# waitTime: minimum and maximum wait times (seconds) after reaching destination# speed: minimum and maximum speeds (m/s) when moving on a path# bufferSize: size of the message buffer (bytes)# router: router used to route messages (valid class name from routing package)# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite## Group and movement model specific settings# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )#       for ShortestPathMapBasedMovement# okMaps : which map nodes are OK for the group (map file indexes), default=all #          for all MapBasedMovent models# routeFile: route's file path - for MapRouteMovement# routeType: route's type - for MapRouteMovementExternalMovement.file = NodePosition/O_C150.txt#ExternalMovement.file = RANDOM_COOR_150.txt# Common settings for all groupsGroup.movementModel = ExternalMovementGroup.router = GrnRouterGroup.samplingInterval = 600Group.lastCCID = 2Group.neighborListFile = NeighborList/O_N150.txtGroup.bufferSize = 500MGroup.waitTime = 0, 120# All nodes have the bluetooth interfaceGroup.nrofInterfaces = 1Group.interface1 = btInterfaceGroup.initialEnergy= 300, 300Group.scanEnergy=0.3Group.transmitEnergy=1.2Group.energyWarmup=0Group.scanInterval=60Group.isEnergyConstrained = 2# Walking speedsGroup.speed = 0, 0# Message TTL of 300 minutes (5 hours)Group.msgTtl = 300Group.sendQueue = 2Group.nrofHosts = 150# group1 (pedestrians) specific settingsGroup1.groupID = n## Message creation parameters # How many event generatorsEvents.nrof = 1# Class of the first event generatorEvents1.class = MessageEventGenerator# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.interval = 35, 45#35, 45#35 - 45# Message sizes (500kB - 1MB)Events1.size = 500k, 1M#500k, 1M#100k, 500k#500k, 1M# range of message source/destination addressesEvents1.hosts = 2, 150Events1.tohosts = 0,2# Message ID prefixEvents1.prefix = M#Events1.activeTimes = 0,300## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 1# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 300, 300# How long time to move hosts in the world before real simulationMovementModel.warmup = 0## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 5# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)#Report.reportDir = [reports/OriginalDRN150/Lower/600; reports/OriginalDRN150/Lower/3600; reports/OriginalDRN150/Lower/1200; reports/OriginalDRN150/Lower/1800; reports/OriginalDRN150/Lower/2400; reports/OriginalDRN150/Lower/3000;reports/OriginalDRN150/Lower/4200; reports/OriginalDRN150/Lower/4800; reports/OriginalDRN150/Lower/5400; reports/OriginalDRN150/Lower/6000; reports/OriginalDRN150/Lower/6600; reports/OriginalDRN150/Lower/7200]Report.reportDir = [reports/OriginalDRN150/Low/600; reports/OriginalDRN150/Low/3600; reports/OriginalDRN150/Low/1200; reports/OriginalDRN150/Low/1800; reports/OriginalDRN150/Low/2400; reports/OriginalDRN150/Low/3000;reports/OriginalDRN150/Low/4200; reports/OriginalDRN150/Low/4800; reports/OriginalDRN150/Low/5400; reports/OriginalDRN150/Low/6000; reports/OriginalDRN150/Low/6600; reports/OriginalDRN150/Low/7200]#Report.reportDir = [reports/OriginalDRN/Low/1; reports/OriginalDRN/Low/2; reports/OriginalDRN/Low/3; reports/OriginalDRN/Low/4; reports/OriginalDRN/Low/5; reports/OriginalDRN/Low/6;reports/OriginalDRN/7; reports/OriginalDRN/Low/8; reports/OriginalDRN/Low/9; reports/OriginalDRN/Low/10; reports/OriginalDRN/Low/11; reports/OriginalDRN/Low/12]# Report classes to loadReport.report1 = MessageStatsReportReport.report2 = AdjacencyGraphvizReportReport.report3 = DeliveredMessagesReportReport.report4 = EnergyLevelReportReport.report5 = EventLogReportReport.granularity = 600## Optimization settings -- these affect the speed of the simulation## see World class for details.Optimization.cellSizeMult = 5Optimization.randomizeUpdateOrder = true## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$